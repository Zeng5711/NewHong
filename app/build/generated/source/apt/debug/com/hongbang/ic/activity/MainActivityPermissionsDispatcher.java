// This file was generated by PermissionsDispatcher. Do not modify!
package com.hongbang.ic.activity;

import android.support.v4.app.ActivityCompat;
import java.lang.Override;
import java.lang.String;
import java.lang.ref.WeakReference;
import permissions.dispatcher.PermissionRequest;
import permissions.dispatcher.PermissionUtils;

final class MainActivityPermissionsDispatcher {
  private static final int REQUEST_GETPERMISSIONS = 0;

  private static final String[] PERMISSION_GETPERMISSIONS = new String[] {"android.permission.ACCESS_FINE_LOCATION","android.permission.ACCESS_COARSE_LOCATION"};

  private MainActivityPermissionsDispatcher() {
  }

  static void getPermissionsWithCheck(MainActivity target) {
    if (PermissionUtils.hasSelfPermissions(target, PERMISSION_GETPERMISSIONS)) {
      target.getPermissions();
    } else {
      if (PermissionUtils.shouldShowRequestPermissionRationale(target, PERMISSION_GETPERMISSIONS)) {
        target.onShowRationale(new GetPermissionsPermissionRequest(target));
      } else {
        ActivityCompat.requestPermissions(target, PERMISSION_GETPERMISSIONS, REQUEST_GETPERMISSIONS);
      }
    }
  }

  static void onRequestPermissionsResult(MainActivity target, int requestCode, int[] grantResults) {
    switch (requestCode) {
      case REQUEST_GETPERMISSIONS:
      if (PermissionUtils.getTargetSdkVersion(target) < 23 && !PermissionUtils.hasSelfPermissions(target, PERMISSION_GETPERMISSIONS)) {
        return;
      }
      if (PermissionUtils.verifyPermissions(grantResults)) {
        target.getPermissions();
      }
      break;
      default:
      break;
    }
  }

  private static final class GetPermissionsPermissionRequest implements PermissionRequest {
    private final WeakReference<MainActivity> weakTarget;

    private GetPermissionsPermissionRequest(MainActivity target) {
      this.weakTarget = new WeakReference<>(target);
    }

    @Override
    public void proceed() {
      MainActivity target = weakTarget.get();
      if (target == null) return;
      ActivityCompat.requestPermissions(target, PERMISSION_GETPERMISSIONS, REQUEST_GETPERMISSIONS);
    }

    @Override
    public void cancel() {
    }
  }
}
